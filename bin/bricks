#!/usr/bin/env node

'use strict';

// const path = require('path');
// const execa = require('execa');
const meow = require('meow');
const semver = require('semver');
const pkg = require('../package.json');
const log = require('../utils/log');

// Check node version
if (!semver.satisfies(process.version, pkg.engines.node)) {
  log.error(
    `Required node version ${
      pkg.engines.node
    } not satisfied with current version ${process.version}`,
  );
  process.exit(0);
}

const defaultCommand = 'dev';
const commands = new Set(['build', defaultCommand]);

const cli = meow(`
  Usage
    $ bricks <command>

  Commands
    ${Array.from(commands).join(', ')}
`);

let cmd = cli.input[0];

if (cmd && !commands.has(cmd)) {
  log.error(
    `Command "${cmd}" not found. To see available commands use the --help flag.`,
  );
  process.exit(0);
}

if (!commands.has(cmd)) {
  cmd = defaultCommand;
}

const defaultEnv = cmd === 'dev' ? 'development' : 'production';
process.env.NODE_ENV = process.env.NODE_ENV || defaultEnv;

require('../utils/startTaskRunner')();

// const bin = path.join(__dirname, `bricks-${cmd}`);

// execa(path.join(__dirname, `bricks-${cmd}`), { stdio: 'inherit' });
